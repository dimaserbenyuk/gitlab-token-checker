name: Build & Upload Lambda

on:
  push:
    paths:
      - "gitlab_tokens.py"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/deploy-lambda.yml"

permissions:
  id-token: write
  contents: read

env:
  FUNCTION_NAME: gitlab-token-checker
  ZIP_NAME: gitlab-token-checker.zip
  S3_BUCKET: example-lambda-67rt
  S3_KEY: lambdas/gitlab-token-checker.zip
  AWS_REGION: us-east-1
  ROLE_TO_ASSUME: arn:aws:iam::272509770066:role/GitHubOIDCRoleForLambdaDeploy
  ROLE_SESSION_NAME: GitHub_to_AWS_via_FederatedOIDC

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install Poetry (latest)
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry self add poetry-plugin-export
          pip install --upgrade pip
          poetry -V

      - name: Install dependencies with Poetry
        run: |
          poetry export -f requirements.txt --without-hashes > requirements.txt
          mkdir -p build
          pip install -r requirements.txt -t build

      - name: Copy source to build directory
        run: |
          cp gitlab_tokens.py build/lambda_function.py


      - name: Create deployment zip
        run: |
          cd build
          zip -r9 ../${{ env.ZIP_NAME }} .

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          role-session-name: ${{ env.ROLE_SESSION_NAME }}
          aws-region: ${{ env.AWS_REGION }}
          role-skip-session-tagging: true
          unset-current-credentials: true
          role-duration-seconds: 3600

      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Upload Lambda zip to S3
        run: |
          aws s3 cp ${{ env.ZIP_NAME }} s3://${{ env.S3_BUCKET }}/${{ env.S3_KEY }}